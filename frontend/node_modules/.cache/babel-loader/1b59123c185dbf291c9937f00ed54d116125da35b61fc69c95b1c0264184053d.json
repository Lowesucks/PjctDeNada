{"ast":null,"code":"// Configuración de la API para manejar conexiones desde dispositivos móviles\nclass ApiConfig {\n  constructor() {\n    this.baseURL = this.detectApiUrl();\n  }\n\n  // Detecta automáticamente la URL de la API\n  detectApiUrl() {\n    // En desarrollo, intentar detectar la IP local\n    if (process.env.NODE_ENV === 'development') {\n      // Si estamos en el navegador, usar la IP del host actual\n      if (typeof window !== 'undefined') {\n        const hostname = window.location.hostname;\n        const port = '5000'; // Puerto del backend\n\n        // Si estamos accediendo desde una IP local, usar esa IP para el backend\n        if (hostname !== 'localhost' && hostname !== '127.0.0.1') {\n          return `http://${hostname}:${port}`;\n        }\n      }\n    }\n\n    // Fallback a localhost\n    return 'http://localhost:5000';\n  }\n\n  // Obtener la URL base de la API\n  getBaseUrl() {\n    return this.baseURL;\n  }\n\n  // Construir URL completa para un endpoint\n  buildUrl(endpoint) {\n    return `${this.baseURL}${endpoint}`;\n  }\n\n  // Configuración para axios\n  getAxiosConfig() {\n    return {\n      baseURL: this.baseURL,\n      timeout: 10000,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      // Configuración para CORS\n      withCredentials: false\n    };\n  }\n}\n\n// Instancia global de configuración\nconst apiConfig = new ApiConfig();\nexport default apiConfig;","map":{"version":3,"names":["ApiConfig","constructor","baseURL","detectApiUrl","process","env","NODE_ENV","window","hostname","location","port","getBaseUrl","buildUrl","endpoint","getAxiosConfig","timeout","headers","withCredentials","apiConfig"],"sources":["C:/Users/anzip/OneDrive/Documentos/Pjarvis/Code/frontend/src/config/api.js"],"sourcesContent":["// Configuración de la API para manejar conexiones desde dispositivos móviles\r\nclass ApiConfig {\r\n  constructor() {\r\n    this.baseURL = this.detectApiUrl();\r\n  }\r\n\r\n  // Detecta automáticamente la URL de la API\r\n  detectApiUrl() {\r\n    // En desarrollo, intentar detectar la IP local\r\n    if (process.env.NODE_ENV === 'development') {\r\n      // Si estamos en el navegador, usar la IP del host actual\r\n      if (typeof window !== 'undefined') {\r\n        const hostname = window.location.hostname;\r\n        const port = '5000'; // Puerto del backend\r\n        \r\n        // Si estamos accediendo desde una IP local, usar esa IP para el backend\r\n        if (hostname !== 'localhost' && hostname !== '127.0.0.1') {\r\n          return `http://${hostname}:${port}`;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Fallback a localhost\r\n    return 'http://localhost:5000';\r\n  }\r\n\r\n  // Obtener la URL base de la API\r\n  getBaseUrl() {\r\n    return this.baseURL;\r\n  }\r\n\r\n  // Construir URL completa para un endpoint\r\n  buildUrl(endpoint) {\r\n    return `${this.baseURL}${endpoint}`;\r\n  }\r\n\r\n  // Configuración para axios\r\n  getAxiosConfig() {\r\n    return {\r\n      baseURL: this.baseURL,\r\n      timeout: 10000,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      // Configuración para CORS\r\n      withCredentials: false\r\n    };\r\n  }\r\n}\r\n\r\n// Instancia global de configuración\r\nconst apiConfig = new ApiConfig();\r\n\r\nexport default apiConfig; "],"mappings":"AAAA;AACA,MAAMA,SAAS,CAAC;EACdC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;EACpC;;EAEA;EACAA,YAAYA,CAAA,EAAG;IACb;IACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;MAC1C;MACA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;QACjC,MAAMC,QAAQ,GAAGD,MAAM,CAACE,QAAQ,CAACD,QAAQ;QACzC,MAAME,IAAI,GAAG,MAAM,CAAC,CAAC;;QAErB;QACA,IAAIF,QAAQ,KAAK,WAAW,IAAIA,QAAQ,KAAK,WAAW,EAAE;UACxD,OAAO,UAAUA,QAAQ,IAAIE,IAAI,EAAE;QACrC;MACF;IACF;;IAEA;IACA,OAAO,uBAAuB;EAChC;;EAEA;EACAC,UAAUA,CAAA,EAAG;IACX,OAAO,IAAI,CAACT,OAAO;EACrB;;EAEA;EACAU,QAAQA,CAACC,QAAQ,EAAE;IACjB,OAAO,GAAG,IAAI,CAACX,OAAO,GAAGW,QAAQ,EAAE;EACrC;;EAEA;EACAC,cAAcA,CAAA,EAAG;IACf,OAAO;MACLZ,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBa,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACD;MACAC,eAAe,EAAE;IACnB,CAAC;EACH;AACF;;AAEA;AACA,MAAMC,SAAS,GAAG,IAAIlB,SAAS,CAAC,CAAC;AAEjC,eAAekB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}