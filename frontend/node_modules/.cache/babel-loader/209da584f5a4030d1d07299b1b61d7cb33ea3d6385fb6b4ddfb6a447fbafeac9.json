{"ast":null,"code":"/**\r\n * Utilidades para probar y verificar configuraciones táctiles\r\n */\n\n/**\r\n * Verifica si las configuraciones táctiles están aplicadas correctamente\r\n */\nexport const verifyTouchConfig = () => {\n  const results = {\n    touchDevice: false,\n    mapContainer: false,\n    touchAction: false,\n    gestureHandling: false,\n    buttons: false\n  };\n\n  // Verificar si es dispositivo táctil\n  results.touchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n\n  // Verificar contenedor del mapa\n  const mapContainer = document.querySelector('.map-container-redesign, .map-container-mobile, .mapa-container');\n  if (mapContainer) {\n    results.mapContainer = true;\n\n    // Verificar touch-action\n    const computedStyle = window.getComputedStyle(mapContainer);\n    results.touchAction = computedStyle.touchAction.includes('pan-x') && computedStyle.touchAction.includes('pan-y') && computedStyle.touchAction.includes('pinch-zoom');\n  }\n\n  // Verificar botones táctiles\n  const touchButtons = document.querySelectorAll('.location-btn, .center-location-btn, .sheet-btn, .mobile-nav button');\n  if (touchButtons.length > 0) {\n    const firstButton = touchButtons[0];\n    const buttonStyle = window.getComputedStyle(firstButton);\n    results.buttons = parseInt(buttonStyle.minWidth) >= 44 || parseInt(buttonStyle.minHeight) >= 44;\n  }\n  return results;\n};\n\n/**\r\n * Muestra un reporte de las configuraciones táctiles en la consola\r\n */\nexport const logTouchConfigReport = () => {\n  const results = verifyTouchConfig();\n  console.log('🔍 Reporte de Configuraciones Táctiles:');\n  console.log('=====================================');\n  console.log(`📱 Dispositivo táctil: ${results.touchDevice ? '✅ Sí' : '❌ No'}`);\n  console.log(`🗺️ Contenedor del mapa: ${results.mapContainer ? '✅ Encontrado' : '❌ No encontrado'}`);\n  console.log(`👆 Touch-action configurado: ${results.touchAction ? '✅ Correcto' : '❌ Incorrecto'}`);\n  console.log(`🔘 Botones táctiles: ${results.buttons ? '✅ Optimizados' : '❌ No optimizados'}`);\n  if (results.touchDevice) {\n    console.log('\\n📋 Recomendaciones para dispositivos táctiles:');\n    console.log('• Usa un dedo para navegar por el mapa');\n    console.log('• Usa dos dedos para hacer zoom');\n    console.log('• Los botones tienen área mínima de 44px para mejor precisión');\n  }\n  return results;\n};\n\n/**\r\n * Aplica configuraciones táctiles adicionales si es necesario\r\n */\nexport const applyAdditionalTouchConfig = () => {\n  // Aplicar configuraciones adicionales a elementos específicos\n  const elements = document.querySelectorAll('.map-container-redesign, .map-container-mobile, .mapa-container');\n  elements.forEach(element => {\n    // Asegurar que las configuraciones táctiles estén aplicadas\n    element.style.touchAction = 'pan-x pan-y pinch-zoom';\n    element.style.webkitTouchCallout = 'none';\n    element.style.webkitUserSelect = 'none';\n    element.style.userSelect = 'none';\n    element.style.webkitTapHighlightColor = 'transparent';\n    element.style.webkitOverflowScrolling = 'touch';\n  });\n\n  // Aplicar configuraciones a botones\n  const buttons = document.querySelectorAll('.location-btn, .center-location-btn, .sheet-btn, .mobile-nav button, .card-btn, .card-btn-secondary, .favorite-btn');\n  buttons.forEach(button => {\n    button.style.minWidth = '44px';\n    button.style.minHeight = '44px';\n    button.style.touchAction = 'manipulation';\n    button.style.webkitTapHighlightColor = 'transparent';\n  });\n  console.log('✅ Configuraciones táctiles adicionales aplicadas');\n};\n\n/**\r\n * Inicializa las verificaciones táctiles\r\n */\nexport const initTouchVerification = () => {\n  // Esperar a que el DOM esté listo\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      setTimeout(() => {\n        logTouchConfigReport();\n        applyAdditionalTouchConfig();\n      }, 1000);\n    });\n  } else {\n    setTimeout(() => {\n      logTouchConfigReport();\n      applyAdditionalTouchConfig();\n    }, 1000);\n  }\n};","map":{"version":3,"names":["verifyTouchConfig","results","touchDevice","mapContainer","touchAction","gestureHandling","buttons","window","navigator","maxTouchPoints","msMaxTouchPoints","document","querySelector","computedStyle","getComputedStyle","includes","touchButtons","querySelectorAll","length","firstButton","buttonStyle","parseInt","minWidth","minHeight","logTouchConfigReport","console","log","applyAdditionalTouchConfig","elements","forEach","element","style","webkitTouchCallout","webkitUserSelect","userSelect","webkitTapHighlightColor","webkitOverflowScrolling","button","initTouchVerification","readyState","addEventListener","setTimeout"],"sources":["C:/Users/anzip/OneDrive/Documentos/Pjarvis/Code/frontend/src/utils/touchTest.js"],"sourcesContent":["/**\r\n * Utilidades para probar y verificar configuraciones táctiles\r\n */\r\n\r\n/**\r\n * Verifica si las configuraciones táctiles están aplicadas correctamente\r\n */\r\nexport const verifyTouchConfig = () => {\r\n  const results = {\r\n    touchDevice: false,\r\n    mapContainer: false,\r\n    touchAction: false,\r\n    gestureHandling: false,\r\n    buttons: false,\r\n  };\r\n\r\n  // Verificar si es dispositivo táctil\r\n  results.touchDevice = 'ontouchstart' in window || \r\n                       navigator.maxTouchPoints > 0 || \r\n                       navigator.msMaxTouchPoints > 0;\r\n\r\n  // Verificar contenedor del mapa\r\n  const mapContainer = document.querySelector('.map-container-redesign, .map-container-mobile, .mapa-container');\r\n  if (mapContainer) {\r\n    results.mapContainer = true;\r\n    \r\n    // Verificar touch-action\r\n    const computedStyle = window.getComputedStyle(mapContainer);\r\n    results.touchAction = computedStyle.touchAction.includes('pan-x') && \r\n                         computedStyle.touchAction.includes('pan-y') &&\r\n                         computedStyle.touchAction.includes('pinch-zoom');\r\n  }\r\n\r\n  // Verificar botones táctiles\r\n  const touchButtons = document.querySelectorAll('.location-btn, .center-location-btn, .sheet-btn, .mobile-nav button');\r\n  if (touchButtons.length > 0) {\r\n    const firstButton = touchButtons[0];\r\n    const buttonStyle = window.getComputedStyle(firstButton);\r\n    results.buttons = parseInt(buttonStyle.minWidth) >= 44 || parseInt(buttonStyle.minHeight) >= 44;\r\n  }\r\n\r\n  return results;\r\n};\r\n\r\n/**\r\n * Muestra un reporte de las configuraciones táctiles en la consola\r\n */\r\nexport const logTouchConfigReport = () => {\r\n  const results = verifyTouchConfig();\r\n  \r\n  console.log('🔍 Reporte de Configuraciones Táctiles:');\r\n  console.log('=====================================');\r\n  console.log(`📱 Dispositivo táctil: ${results.touchDevice ? '✅ Sí' : '❌ No'}`);\r\n  console.log(`🗺️ Contenedor del mapa: ${results.mapContainer ? '✅ Encontrado' : '❌ No encontrado'}`);\r\n  console.log(`👆 Touch-action configurado: ${results.touchAction ? '✅ Correcto' : '❌ Incorrecto'}`);\r\n  console.log(`🔘 Botones táctiles: ${results.buttons ? '✅ Optimizados' : '❌ No optimizados'}`);\r\n  \r\n  if (results.touchDevice) {\r\n    console.log('\\n📋 Recomendaciones para dispositivos táctiles:');\r\n    console.log('• Usa un dedo para navegar por el mapa');\r\n    console.log('• Usa dos dedos para hacer zoom');\r\n    console.log('• Los botones tienen área mínima de 44px para mejor precisión');\r\n  }\r\n  \r\n  return results;\r\n};\r\n\r\n/**\r\n * Aplica configuraciones táctiles adicionales si es necesario\r\n */\r\nexport const applyAdditionalTouchConfig = () => {\r\n  // Aplicar configuraciones adicionales a elementos específicos\r\n  const elements = document.querySelectorAll('.map-container-redesign, .map-container-mobile, .mapa-container');\r\n  \r\n  elements.forEach(element => {\r\n    // Asegurar que las configuraciones táctiles estén aplicadas\r\n    element.style.touchAction = 'pan-x pan-y pinch-zoom';\r\n    element.style.webkitTouchCallout = 'none';\r\n    element.style.webkitUserSelect = 'none';\r\n    element.style.userSelect = 'none';\r\n    element.style.webkitTapHighlightColor = 'transparent';\r\n    element.style.webkitOverflowScrolling = 'touch';\r\n  });\r\n\r\n  // Aplicar configuraciones a botones\r\n  const buttons = document.querySelectorAll('.location-btn, .center-location-btn, .sheet-btn, .mobile-nav button, .card-btn, .card-btn-secondary, .favorite-btn');\r\n  \r\n  buttons.forEach(button => {\r\n    button.style.minWidth = '44px';\r\n    button.style.minHeight = '44px';\r\n    button.style.touchAction = 'manipulation';\r\n    button.style.webkitTapHighlightColor = 'transparent';\r\n  });\r\n\r\n  console.log('✅ Configuraciones táctiles adicionales aplicadas');\r\n};\r\n\r\n/**\r\n * Inicializa las verificaciones táctiles\r\n */\r\nexport const initTouchVerification = () => {\r\n  // Esperar a que el DOM esté listo\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n      setTimeout(() => {\r\n        logTouchConfigReport();\r\n        applyAdditionalTouchConfig();\r\n      }, 1000);\r\n    });\r\n  } else {\r\n    setTimeout(() => {\r\n      logTouchConfigReport();\r\n      applyAdditionalTouchConfig();\r\n    }, 1000);\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}