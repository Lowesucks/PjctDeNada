{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anzip\\\\OneDrive\\\\Documentos\\\\Pjarvis\\\\Code\\\\frontend\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useMemo, useEffect } from 'react';\n\n// Creamos el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\n\n// Creamos el proveedor del contexto\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Estado para guardar el tema actual. Leemos el tema guardado en localStorage o usamos 'light' por defecto.\n  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light');\n\n  // Guardar el tema en localStorage cada vez que cambie\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n    // A침adimos/quitamos la clase 'dark' al body para que el CSS reaccione\n    document.body.className = '';\n    document.body.classList.add(theme);\n  }, [theme]);\n\n  // Funci칩n para cambiar el tema\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n\n  // Usamos useMemo para evitar que el valor del contexto se recalcule en cada render\n  const value = useMemo(() => ({\n    theme,\n    toggleTheme\n  }), [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"BvTvOTNHr3DImoggOOBL8JtC1yw=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useMemo","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","localStorage","getItem","setItem","document","body","className","classList","add","toggleTheme","prevTheme","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anzip/OneDrive/Documentos/Pjarvis/Code/frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useMemo, useEffect } from 'react';\r\n\r\n// Creamos el contexto\r\nexport const ThemeContext = createContext();\r\n\r\n// Creamos el proveedor del contexto\r\nexport const ThemeProvider = ({ children }) => {\r\n  // Estado para guardar el tema actual. Leemos el tema guardado en localStorage o usamos 'light' por defecto.\r\n  const [theme, setTheme] = useState(localStorage.getItem('theme') || 'light');\r\n\r\n  // Guardar el tema en localStorage cada vez que cambie\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', theme);\r\n    // A침adimos/quitamos la clase 'dark' al body para que el CSS reaccione\r\n    document.body.className = '';\r\n    document.body.classList.add(theme);\r\n  }, [theme]);\r\n\r\n  // Funci칩n para cambiar el tema\r\n  const toggleTheme = () => {\r\n    setTheme(prevTheme => (prevTheme === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  // Usamos useMemo para evitar que el valor del contexto se recalcule en cada render\r\n  const value = useMemo(() => ({ theme, toggleTheme }), [theme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,QAAQ,OAAO;;AAE1E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;;AAE3C;AACA,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC;;EAE5E;EACAV,SAAS,CAAC,MAAM;IACdS,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;IACpC;IACAK,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAG,EAAE;IAC5BF,QAAQ,CAACC,IAAI,CAACE,SAAS,CAACC,GAAG,CAACT,KAAK,CAAC;EACpC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBT,QAAQ,CAACU,SAAS,IAAKA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACnE,CAAC;;EAED;EACA,MAAMC,KAAK,GAAGpB,OAAO,CAAC,OAAO;IAAEQ,KAAK;IAAEU;EAAY,CAAC,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EAE9D,oBACEL,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAd,QAAA,EACjCA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAClB,EAAA,CAzBWF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}