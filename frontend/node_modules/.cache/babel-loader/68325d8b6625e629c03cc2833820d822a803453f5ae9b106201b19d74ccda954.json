{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anzip\\\\OneDrive\\\\Documentos\\\\Pjarvis\\\\Code\\\\frontend\\\\src\\\\components\\\\MapaBarberias.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader, MarkerF } from '@react-google-maps/api';\nimport '../config/suppressWarnings'; // Suprimir advertencias de deprecación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\nconst defaultCenter = {\n  lat: 19.432608,\n  lng: -99.133209\n};\nfunction MapaBarberias({\n  barberias,\n  onBarberiaSelect,\n  userLocation,\n  center,\n  zoom,\n  onMapDoubleClick,\n  mapStyle,\n  iconConfig\n}) {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const mapCenter = center && center.lat && center.lng ? center : defaultCenter;\n  const handleMarkerClick = barberia => {\n    if (onBarberiaSelect) {\n      onBarberiaSelect(barberia);\n    }\n  };\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error al cargar el mapa. Aseg\\xFArate de que la clave de API sea correcta.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: mapCenter,\n    zoom: zoom || 13,\n    onDblClick: onMapDoubleClick,\n    options: {\n      styles: mapStyle,\n      disableDoubleClickZoom: true,\n      fullscreenControl: false,\n      streetViewControl: false,\n      mapTypeControl: false\n    },\n    children: [userLocation && /*#__PURE__*/_jsxDEV(MarkerF, {\n      position: userLocation,\n      title: \"Tu Ubicación\",\n      icon: {\n        path: window.google.maps.SymbolPath.CIRCLE,\n        fillColor: '#4285F4',\n        fillOpacity: 1,\n        strokeColor: 'white',\n        strokeWeight: 2,\n        scale: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), barberias.map(barberia => {\n      const lat = Number(barberia.lat);\n      const lng = Number(barberia.lng);\n\n      // Solo renderiza el marcador si ambos son números válidos\n      if (isNaN(lat) || isNaN(lng)) {\n        console.warn(\"Barbería con lat/lng inválido:\", barberia);\n        return null;\n      }\n      const finalIcon = isLoaded && iconConfig ? {\n        url: iconConfig.url,\n        scaledSize: new window.google.maps.Size(iconConfig.scaledSize.width, iconConfig.scaledSize.height),\n        anchor: new window.google.maps.Point(iconConfig.anchor.x, iconConfig.anchor.y)\n      } : undefined;\n      return /*#__PURE__*/_jsxDEV(MarkerF, {\n        position: {\n          lat,\n          lng\n        },\n        onClick: () => handleMarkerClick(barberia),\n        title: barberia.nombre,\n        icon: finalIcon\n      }, barberia.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando mapa...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(MapaBarberias, \"ssip+Uy9VcsolHUNjpn9QiG6XKw=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = MapaBarberias;\nexport default _c2 = /*#__PURE__*/React.memo(MapaBarberias);\nvar _c, _c2;\n$RefreshReg$(_c, \"MapaBarberias\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","GoogleMap","useJsApiLoader","MarkerF","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","MapaBarberias","barberias","onBarberiaSelect","userLocation","center","zoom","onMapDoubleClick","mapStyle","iconConfig","_s","isLoaded","loadError","id","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","mapCenter","handleMarkerClick","barberia","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","onDblClick","options","styles","disableDoubleClickZoom","fullscreenControl","streetViewControl","mapTypeControl","position","title","icon","path","window","google","maps","SymbolPath","CIRCLE","fillColor","fillOpacity","strokeColor","strokeWeight","scale","map","Number","isNaN","console","warn","finalIcon","url","scaledSize","Size","anchor","Point","x","y","undefined","onClick","nombre","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/anzip/OneDrive/Documentos/Pjarvis/Code/frontend/src/components/MapaBarberias.js"],"sourcesContent":["import React from 'react';\r\nimport { GoogleMap, useJsApiLoader, MarkerF } from '@react-google-maps/api';\r\nimport '../config/suppressWarnings'; // Suprimir advertencias de deprecación\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '100%',\r\n};\r\n\r\nconst defaultCenter = {\r\n  lat: 19.432608,\r\n  lng: -99.133209,\r\n};\r\n\r\nfunction MapaBarberias({ barberias, onBarberiaSelect, userLocation, center, zoom, onMapDoubleClick, mapStyle, iconConfig }) {\r\n  const { isLoaded, loadError } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  const mapCenter = center && center.lat && center.lng ? center : defaultCenter;\r\n\r\n  const handleMarkerClick = (barberia) => {\r\n    if (onBarberiaSelect) {\r\n      onBarberiaSelect(barberia);\r\n    }\r\n  };\r\n\r\n  if (loadError) {\r\n    return <div>Error al cargar el mapa. Asegúrate de que la clave de API sea correcta.</div>;\r\n  }\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={mapCenter}\r\n      zoom={zoom || 13}\r\n      onDblClick={onMapDoubleClick}\r\n      options={{\r\n        styles: mapStyle,\r\n        disableDoubleClickZoom: true,\r\n        fullscreenControl: false,\r\n        streetViewControl: false,\r\n        mapTypeControl: false,\r\n      }}\r\n    >\r\n      {/* Marcador para la ubicación del usuario */}\r\n      {userLocation && (\r\n        <MarkerF\r\n          position={userLocation}\r\n          title={\"Tu Ubicación\"}\r\n          icon={{\r\n            path: window.google.maps.SymbolPath.CIRCLE,\r\n            fillColor: '#4285F4',\r\n            fillOpacity: 1,\r\n            strokeColor: 'white',\r\n            strokeWeight: 2,\r\n            scale: 8\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* Marcadores para las barberías */}\r\n      {barberias.map((barberia) => {\r\n        const lat = Number(barberia.lat);\r\n        const lng = Number(barberia.lng);\r\n\r\n        // Solo renderiza el marcador si ambos son números válidos\r\n        if (isNaN(lat) || isNaN(lng)) {\r\n          console.warn(\"Barbería con lat/lng inválido:\", barberia);\r\n          return null;\r\n        }\r\n\r\n        const finalIcon = isLoaded && iconConfig ? {\r\n          url: iconConfig.url,\r\n          scaledSize: new window.google.maps.Size(iconConfig.scaledSize.width, iconConfig.scaledSize.height),\r\n          anchor: new window.google.maps.Point(iconConfig.anchor.x, iconConfig.anchor.y),\r\n        } : undefined;\r\n\r\n        return (\r\n          <MarkerF\r\n            key={barberia.id}\r\n            position={{ lat, lng }}\r\n            onClick={() => handleMarkerClick(barberia)}\r\n            title={barberia.nombre}\r\n            icon={finalIcon}\r\n          />\r\n        );\r\n      })}\r\n    </GoogleMap>\r\n  ) : (\r\n    <div>Cargando mapa...</div>\r\n  );\r\n}\r\n\r\nexport default React.memo(MapaBarberias); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}