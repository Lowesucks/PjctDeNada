{"ast":null,"code":"/**\r\n * Utilidades para detectar y optimizar dispositivos móviles\r\n */\n\n/**\r\n * Detecta si el dispositivo es móvil\r\n */\nexport const isMobileDevice = () => {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth <= 768;\n};\n\n/**\r\n * Detecta si el dispositivo tiene notch\r\n */\nexport const hasNotch = () => {\n  return 'CSS' in window && 'supports' in CSS && CSS.supports('padding-top: env(safe-area-inset-top)') && window.innerWidth <= 768;\n};\n\n/**\r\n * Detecta si el dispositivo tiene barra de navegación gestual\r\n */\nexport const hasGestureNavigation = () => {\n  return 'CSS' in window && 'supports' in CSS && CSS.supports('padding-bottom: env(safe-area-inset-bottom)') && window.innerWidth <= 768;\n};\n\n/**\r\n * Obtiene las dimensiones del viewport\r\n */\nexport const getViewportDimensions = () => {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    screenWidth: window.screen.width,\n    screenHeight: window.screen.height,\n    devicePixelRatio: window.devicePixelRatio\n  };\n};\n\n/**\r\n * Obtiene información sobre las áreas seguras\r\n */\nexport const getSafeAreaInfo = () => {\n  const safeAreaTop = getComputedStyle(document.documentElement).getPropertyValue('--sat') || '0px';\n  const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--sab') || '0px';\n  const safeAreaLeft = getComputedStyle(document.documentElement).getPropertyValue('--sal') || '0px';\n  const safeAreaRight = getComputedStyle(document.documentElement).getPropertyValue('--sar') || '0px';\n  return {\n    top: safeAreaTop,\n    bottom: safeAreaBottom,\n    left: safeAreaLeft,\n    right: safeAreaRight\n  };\n};\n\n/**\r\n * Detecta el tipo de dispositivo específico\r\n */\nexport const getDeviceType = () => {\n  const userAgent = navigator.userAgent;\n  const dimensions = getViewportDimensions();\n\n  // iPhone\n  if (/iPhone/i.test(userAgent)) {\n    if (dimensions.width === 375 && dimensions.height === 667) return 'iPhone SE';\n    if (dimensions.width === 414 && dimensions.height === 896) return 'iPhone XR/11';\n    if (dimensions.width === 375 && dimensions.height === 812) return 'iPhone X/XS';\n    if (dimensions.width === 414 && dimensions.height === 896) return 'iPhone XS Max/11 Pro Max';\n    if (dimensions.width === 390 && dimensions.height === 844) return 'iPhone 12/13/14';\n    if (dimensions.width === 428 && dimensions.height === 926) return 'iPhone 12/13/14 Pro Max';\n    return 'iPhone';\n  }\n\n  // Android\n  if (/Android/i.test(userAgent)) {\n    if (dimensions.width <= 360) return 'Android Small';\n    if (dimensions.width <= 480) return 'Android Medium';\n    return 'Android Large';\n  }\n\n  // iPad\n  if (/iPad/i.test(userAgent)) {\n    return 'iPad';\n  }\n  return 'Unknown';\n};\n\n/**\r\n * Verifica si el dispositivo está en orientación landscape\r\n */\nexport const isLandscape = () => {\n  return window.innerWidth > window.innerHeight;\n};\n\n/**\r\n * Obtiene información completa del dispositivo\r\n */\nexport const getDeviceInfo = () => {\n  return {\n    isMobile: isMobileDevice(),\n    hasNotch: hasNotch(),\n    hasGestureNavigation: hasGestureNavigation(),\n    deviceType: getDeviceType(),\n    isLandscape: isLandscape(),\n    viewport: getViewportDimensions(),\n    safeArea: getSafeAreaInfo(),\n    userAgent: navigator.userAgent,\n    platform: navigator.platform,\n    language: navigator.language\n  };\n};\n\n/**\r\n * Muestra un reporte detallado del dispositivo en la consola\r\n */\nexport const logDeviceReport = () => {\n  const deviceInfo = getDeviceInfo();\n  console.log('📱 Reporte de Dispositivo Móvil:');\n  console.log('================================');\n  console.log(`📱 Tipo de dispositivo: ${deviceInfo.deviceType}`);\n  console.log(`📐 Es móvil: ${deviceInfo.isMobile ? '✅ Sí' : '❌ No'}`);\n  console.log(`📱 Tiene notch: ${deviceInfo.hasNotch ? '✅ Sí' : '❌ No'}`);\n  console.log(`👆 Navegación gestual: ${deviceInfo.hasGestureNavigation ? '✅ Sí' : '❌ No'}`);\n  console.log(`🔄 Orientación: ${deviceInfo.isLandscape ? 'Landscape' : 'Portrait'}`);\n  console.log(`📏 Viewport: ${deviceInfo.viewport.width}x${deviceInfo.viewport.height}`);\n  console.log(`🖥️ Pantalla: ${deviceInfo.viewport.screenWidth}x${deviceInfo.viewport.screenHeight}`);\n  console.log(`🔍 Pixel ratio: ${deviceInfo.viewport.devicePixelRatio}`);\n  console.log(`📐 Áreas seguras:`);\n  console.log(`   - Superior: ${deviceInfo.safeArea.top}`);\n  console.log(`   - Inferior: ${deviceInfo.safeArea.bottom}`);\n  console.log(`   - Izquierda: ${deviceInfo.safeArea.left}`);\n  console.log(`   - Derecha: ${deviceInfo.safeArea.right}`);\n  if (deviceInfo.isMobile) {\n    console.log('\\n📋 Recomendaciones para este dispositivo:');\n    console.log('• La aplicación está optimizada para pantalla completa');\n    console.log('• Los controles están adaptados a las áreas seguras');\n    console.log('• La navegación está optimizada para touch');\n  }\n  return deviceInfo;\n};\n\n/**\r\n * Aplica configuraciones específicas según el dispositivo\r\n */\nexport const applyDeviceSpecificConfig = () => {\n  const deviceInfo = getDeviceInfo();\n  if (deviceInfo.isMobile) {\n    // Aplicar configuraciones específicas para móviles\n    document.documentElement.style.setProperty('--device-type', deviceInfo.deviceType);\n    document.documentElement.style.setProperty('--has-notch', deviceInfo.hasNotch ? '1' : '0');\n    document.documentElement.style.setProperty('--has-gesture-nav', deviceInfo.hasGestureNavigation ? '1' : '0');\n\n    // Configuraciones específicas por tipo de dispositivo\n    if (deviceInfo.deviceType.includes('iPhone')) {\n      document.documentElement.style.setProperty('--mobile-padding', 'env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left)');\n    } else if (deviceInfo.deviceType.includes('Android')) {\n      document.documentElement.style.setProperty('--mobile-padding', '0px');\n    }\n    console.log('✅ Configuraciones específicas del dispositivo aplicadas');\n  }\n};\n\n/**\r\n * Inicializa la detección de dispositivos\r\n */\nexport const initDeviceDetection = () => {\n  // Esperar a que el DOM esté listo\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      setTimeout(() => {\n        logDeviceReport();\n        applyDeviceSpecificConfig();\n      }, 1000);\n    });\n  } else {\n    setTimeout(() => {\n      logDeviceReport();\n      applyDeviceSpecificConfig();\n    }, 1000);\n  }\n\n  // Escuchar cambios de orientación\n  window.addEventListener('orientationchange', () => {\n    setTimeout(() => {\n      console.log('🔄 Orientación cambiada - Actualizando configuración...');\n      applyDeviceSpecificConfig();\n    }, 500);\n  });\n\n  // Escuchar cambios de tamaño de ventana\n  window.addEventListener('resize', () => {\n    setTimeout(() => {\n      applyDeviceSpecificConfig();\n    }, 100);\n  });\n};","map":{"version":3,"names":["isMobileDevice","test","navigator","userAgent","window","innerWidth","hasNotch","CSS","supports","hasGestureNavigation","getViewportDimensions","width","height","innerHeight","screenWidth","screen","screenHeight","devicePixelRatio","getSafeAreaInfo","safeAreaTop","getComputedStyle","document","documentElement","getPropertyValue","safeAreaBottom","safeAreaLeft","safeAreaRight","top","bottom","left","right","getDeviceType","dimensions","isLandscape","getDeviceInfo","isMobile","deviceType","viewport","safeArea","platform","language","logDeviceReport","deviceInfo","console","log","applyDeviceSpecificConfig","style","setProperty","includes","initDeviceDetection","readyState","addEventListener","setTimeout"],"sources":["C:/Users/anzip/OneDrive/Documentos/Pjarvis/Code/frontend/src/utils/mobileDetection.js"],"sourcesContent":["/**\r\n * Utilidades para detectar y optimizar dispositivos móviles\r\n */\r\n\r\n/**\r\n * Detecta si el dispositivo es móvil\r\n */\r\nexport const isMobileDevice = () => {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\r\n         window.innerWidth <= 768;\r\n};\r\n\r\n/**\r\n * Detecta si el dispositivo tiene notch\r\n */\r\nexport const hasNotch = () => {\r\n  return 'CSS' in window && 'supports' in CSS && \r\n         CSS.supports('padding-top: env(safe-area-inset-top)') &&\r\n         window.innerWidth <= 768;\r\n};\r\n\r\n/**\r\n * Detecta si el dispositivo tiene barra de navegación gestual\r\n */\r\nexport const hasGestureNavigation = () => {\r\n  return 'CSS' in window && 'supports' in CSS && \r\n         CSS.supports('padding-bottom: env(safe-area-inset-bottom)') &&\r\n         window.innerWidth <= 768;\r\n};\r\n\r\n/**\r\n * Obtiene las dimensiones del viewport\r\n */\r\nexport const getViewportDimensions = () => {\r\n  return {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    screenWidth: window.screen.width,\r\n    screenHeight: window.screen.height,\r\n    devicePixelRatio: window.devicePixelRatio,\r\n  };\r\n};\r\n\r\n/**\r\n * Obtiene información sobre las áreas seguras\r\n */\r\nexport const getSafeAreaInfo = () => {\r\n  const safeAreaTop = getComputedStyle(document.documentElement).getPropertyValue('--sat') || '0px';\r\n  const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--sab') || '0px';\r\n  const safeAreaLeft = getComputedStyle(document.documentElement).getPropertyValue('--sal') || '0px';\r\n  const safeAreaRight = getComputedStyle(document.documentElement).getPropertyValue('--sar') || '0px';\r\n  \r\n  return {\r\n    top: safeAreaTop,\r\n    bottom: safeAreaBottom,\r\n    left: safeAreaLeft,\r\n    right: safeAreaRight,\r\n  };\r\n};\r\n\r\n/**\r\n * Detecta el tipo de dispositivo específico\r\n */\r\nexport const getDeviceType = () => {\r\n  const userAgent = navigator.userAgent;\r\n  const dimensions = getViewportDimensions();\r\n  \r\n  // iPhone\r\n  if (/iPhone/i.test(userAgent)) {\r\n    if (dimensions.width === 375 && dimensions.height === 667) return 'iPhone SE';\r\n    if (dimensions.width === 414 && dimensions.height === 896) return 'iPhone XR/11';\r\n    if (dimensions.width === 375 && dimensions.height === 812) return 'iPhone X/XS';\r\n    if (dimensions.width === 414 && dimensions.height === 896) return 'iPhone XS Max/11 Pro Max';\r\n    if (dimensions.width === 390 && dimensions.height === 844) return 'iPhone 12/13/14';\r\n    if (dimensions.width === 428 && dimensions.height === 926) return 'iPhone 12/13/14 Pro Max';\r\n    return 'iPhone';\r\n  }\r\n  \r\n  // Android\r\n  if (/Android/i.test(userAgent)) {\r\n    if (dimensions.width <= 360) return 'Android Small';\r\n    if (dimensions.width <= 480) return 'Android Medium';\r\n    return 'Android Large';\r\n  }\r\n  \r\n  // iPad\r\n  if (/iPad/i.test(userAgent)) {\r\n    return 'iPad';\r\n  }\r\n  \r\n  return 'Unknown';\r\n};\r\n\r\n/**\r\n * Verifica si el dispositivo está en orientación landscape\r\n */\r\nexport const isLandscape = () => {\r\n  return window.innerWidth > window.innerHeight;\r\n};\r\n\r\n/**\r\n * Obtiene información completa del dispositivo\r\n */\r\nexport const getDeviceInfo = () => {\r\n  return {\r\n    isMobile: isMobileDevice(),\r\n    hasNotch: hasNotch(),\r\n    hasGestureNavigation: hasGestureNavigation(),\r\n    deviceType: getDeviceType(),\r\n    isLandscape: isLandscape(),\r\n    viewport: getViewportDimensions(),\r\n    safeArea: getSafeAreaInfo(),\r\n    userAgent: navigator.userAgent,\r\n    platform: navigator.platform,\r\n    language: navigator.language,\r\n  };\r\n};\r\n\r\n/**\r\n * Muestra un reporte detallado del dispositivo en la consola\r\n */\r\nexport const logDeviceReport = () => {\r\n  const deviceInfo = getDeviceInfo();\r\n  \r\n  console.log('📱 Reporte de Dispositivo Móvil:');\r\n  console.log('================================');\r\n  console.log(`📱 Tipo de dispositivo: ${deviceInfo.deviceType}`);\r\n  console.log(`📐 Es móvil: ${deviceInfo.isMobile ? '✅ Sí' : '❌ No'}`);\r\n  console.log(`📱 Tiene notch: ${deviceInfo.hasNotch ? '✅ Sí' : '❌ No'}`);\r\n  console.log(`👆 Navegación gestual: ${deviceInfo.hasGestureNavigation ? '✅ Sí' : '❌ No'}`);\r\n  console.log(`🔄 Orientación: ${deviceInfo.isLandscape ? 'Landscape' : 'Portrait'}`);\r\n  console.log(`📏 Viewport: ${deviceInfo.viewport.width}x${deviceInfo.viewport.height}`);\r\n  console.log(`🖥️ Pantalla: ${deviceInfo.viewport.screenWidth}x${deviceInfo.viewport.screenHeight}`);\r\n  console.log(`🔍 Pixel ratio: ${deviceInfo.viewport.devicePixelRatio}`);\r\n  console.log(`📐 Áreas seguras:`);\r\n  console.log(`   - Superior: ${deviceInfo.safeArea.top}`);\r\n  console.log(`   - Inferior: ${deviceInfo.safeArea.bottom}`);\r\n  console.log(`   - Izquierda: ${deviceInfo.safeArea.left}`);\r\n  console.log(`   - Derecha: ${deviceInfo.safeArea.right}`);\r\n  \r\n  if (deviceInfo.isMobile) {\r\n    console.log('\\n📋 Recomendaciones para este dispositivo:');\r\n    console.log('• La aplicación está optimizada para pantalla completa');\r\n    console.log('• Los controles están adaptados a las áreas seguras');\r\n    console.log('• La navegación está optimizada para touch');\r\n  }\r\n  \r\n  return deviceInfo;\r\n};\r\n\r\n/**\r\n * Aplica configuraciones específicas según el dispositivo\r\n */\r\nexport const applyDeviceSpecificConfig = () => {\r\n  const deviceInfo = getDeviceInfo();\r\n  \r\n  if (deviceInfo.isMobile) {\r\n    // Aplicar configuraciones específicas para móviles\r\n    document.documentElement.style.setProperty('--device-type', deviceInfo.deviceType);\r\n    document.documentElement.style.setProperty('--has-notch', deviceInfo.hasNotch ? '1' : '0');\r\n    document.documentElement.style.setProperty('--has-gesture-nav', deviceInfo.hasGestureNavigation ? '1' : '0');\r\n    \r\n    // Configuraciones específicas por tipo de dispositivo\r\n    if (deviceInfo.deviceType.includes('iPhone')) {\r\n      document.documentElement.style.setProperty('--mobile-padding', 'env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left)');\r\n    } else if (deviceInfo.deviceType.includes('Android')) {\r\n      document.documentElement.style.setProperty('--mobile-padding', '0px');\r\n    }\r\n    \r\n    console.log('✅ Configuraciones específicas del dispositivo aplicadas');\r\n  }\r\n};\r\n\r\n/**\r\n * Inicializa la detección de dispositivos\r\n */\r\nexport const initDeviceDetection = () => {\r\n  // Esperar a que el DOM esté listo\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n      setTimeout(() => {\r\n        logDeviceReport();\r\n        applyDeviceSpecificConfig();\r\n      }, 1000);\r\n    });\r\n  } else {\r\n    setTimeout(() => {\r\n      logDeviceReport();\r\n      applyDeviceSpecificConfig();\r\n    }, 1000);\r\n  }\r\n  \r\n  // Escuchar cambios de orientación\r\n  window.addEventListener('orientationchange', () => {\r\n    setTimeout(() => {\r\n      console.log('🔄 Orientación cambiada - Actualizando configuración...');\r\n      applyDeviceSpecificConfig();\r\n    }, 500);\r\n  });\r\n  \r\n  // Escuchar cambios de tamaño de ventana\r\n  window.addEventListener('resize', () => {\r\n    setTimeout(() => {\r\n      applyDeviceSpecificConfig();\r\n    }, 100);\r\n  });\r\n}; "],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,MAAMA,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAO,gEAAgE,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IAC1FC,MAAM,CAACC,UAAU,IAAI,GAAG;AACjC,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAO,KAAK,IAAIF,MAAM,IAAI,UAAU,IAAIG,GAAG,IACpCA,GAAG,CAACC,QAAQ,CAAC,uCAAuC,CAAC,IACrDJ,MAAM,CAACC,UAAU,IAAI,GAAG;AACjC,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;EACxC,OAAO,KAAK,IAAIL,MAAM,IAAI,UAAU,IAAIG,GAAG,IACpCA,GAAG,CAACC,QAAQ,CAAC,6CAA6C,CAAC,IAC3DJ,MAAM,CAACC,UAAU,IAAI,GAAG;AACjC,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMK,qBAAqB,GAAGA,CAAA,KAAM;EACzC,OAAO;IACLC,KAAK,EAAEP,MAAM,CAACC,UAAU;IACxBO,MAAM,EAAER,MAAM,CAACS,WAAW;IAC1BC,WAAW,EAAEV,MAAM,CAACW,MAAM,CAACJ,KAAK;IAChCK,YAAY,EAAEZ,MAAM,CAACW,MAAM,CAACH,MAAM;IAClCK,gBAAgB,EAAEb,MAAM,CAACa;EAC3B,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMC,WAAW,GAAGC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,OAAO,CAAC,IAAI,KAAK;EACjG,MAAMC,cAAc,GAAGJ,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,OAAO,CAAC,IAAI,KAAK;EACpG,MAAME,YAAY,GAAGL,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,OAAO,CAAC,IAAI,KAAK;EAClG,MAAMG,aAAa,GAAGN,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,OAAO,CAAC,IAAI,KAAK;EAEnG,OAAO;IACLI,GAAG,EAAER,WAAW;IAChBS,MAAM,EAAEJ,cAAc;IACtBK,IAAI,EAAEJ,YAAY;IAClBK,KAAK,EAAEJ;EACT,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMK,aAAa,GAAGA,CAAA,KAAM;EACjC,MAAM5B,SAAS,GAAGD,SAAS,CAACC,SAAS;EACrC,MAAM6B,UAAU,GAAGtB,qBAAqB,CAAC,CAAC;;EAE1C;EACA,IAAI,SAAS,CAACT,IAAI,CAACE,SAAS,CAAC,EAAE;IAC7B,IAAI6B,UAAU,CAACrB,KAAK,KAAK,GAAG,IAAIqB,UAAU,CAACpB,MAAM,KAAK,GAAG,EAAE,OAAO,WAAW;IAC7E,IAAIoB,UAAU,CAACrB,KAAK,KAAK,GAAG,IAAIqB,UAAU,CAACpB,MAAM,KAAK,GAAG,EAAE,OAAO,cAAc;IAChF,IAAIoB,UAAU,CAACrB,KAAK,KAAK,GAAG,IAAIqB,UAAU,CAACpB,MAAM,KAAK,GAAG,EAAE,OAAO,aAAa;IAC/E,IAAIoB,UAAU,CAACrB,KAAK,KAAK,GAAG,IAAIqB,UAAU,CAACpB,MAAM,KAAK,GAAG,EAAE,OAAO,0BAA0B;IAC5F,IAAIoB,UAAU,CAACrB,KAAK,KAAK,GAAG,IAAIqB,UAAU,CAACpB,MAAM,KAAK,GAAG,EAAE,OAAO,iBAAiB;IACnF,IAAIoB,UAAU,CAACrB,KAAK,KAAK,GAAG,IAAIqB,UAAU,CAACpB,MAAM,KAAK,GAAG,EAAE,OAAO,yBAAyB;IAC3F,OAAO,QAAQ;EACjB;;EAEA;EACA,IAAI,UAAU,CAACX,IAAI,CAACE,SAAS,CAAC,EAAE;IAC9B,IAAI6B,UAAU,CAACrB,KAAK,IAAI,GAAG,EAAE,OAAO,eAAe;IACnD,IAAIqB,UAAU,CAACrB,KAAK,IAAI,GAAG,EAAE,OAAO,gBAAgB;IACpD,OAAO,eAAe;EACxB;;EAEA;EACA,IAAI,OAAO,CAACV,IAAI,CAACE,SAAS,CAAC,EAAE;IAC3B,OAAO,MAAM;EACf;EAEA,OAAO,SAAS;AAClB,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAM8B,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAO7B,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACS,WAAW;AAC/C,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMqB,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO;IACLC,QAAQ,EAAEnC,cAAc,CAAC,CAAC;IAC1BM,QAAQ,EAAEA,QAAQ,CAAC,CAAC;IACpBG,oBAAoB,EAAEA,oBAAoB,CAAC,CAAC;IAC5C2B,UAAU,EAAEL,aAAa,CAAC,CAAC;IAC3BE,WAAW,EAAEA,WAAW,CAAC,CAAC;IAC1BI,QAAQ,EAAE3B,qBAAqB,CAAC,CAAC;IACjC4B,QAAQ,EAAEpB,eAAe,CAAC,CAAC;IAC3Bf,SAAS,EAAED,SAAS,CAACC,SAAS;IAC9BoC,QAAQ,EAAErC,SAAS,CAACqC,QAAQ;IAC5BC,QAAQ,EAAEtC,SAAS,CAACsC;EACtB,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAMC,UAAU,GAAGR,aAAa,CAAC,CAAC;EAElCS,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EAC/CD,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EAC/CD,OAAO,CAACC,GAAG,CAAC,2BAA2BF,UAAU,CAACN,UAAU,EAAE,CAAC;EAC/DO,OAAO,CAACC,GAAG,CAAC,gBAAgBF,UAAU,CAACP,QAAQ,GAAG,MAAM,GAAG,MAAM,EAAE,CAAC;EACpEQ,OAAO,CAACC,GAAG,CAAC,mBAAmBF,UAAU,CAACpC,QAAQ,GAAG,MAAM,GAAG,MAAM,EAAE,CAAC;EACvEqC,OAAO,CAACC,GAAG,CAAC,0BAA0BF,UAAU,CAACjC,oBAAoB,GAAG,MAAM,GAAG,MAAM,EAAE,CAAC;EAC1FkC,OAAO,CAACC,GAAG,CAAC,mBAAmBF,UAAU,CAACT,WAAW,GAAG,WAAW,GAAG,UAAU,EAAE,CAAC;EACnFU,OAAO,CAACC,GAAG,CAAC,gBAAgBF,UAAU,CAACL,QAAQ,CAAC1B,KAAK,IAAI+B,UAAU,CAACL,QAAQ,CAACzB,MAAM,EAAE,CAAC;EACtF+B,OAAO,CAACC,GAAG,CAAC,iBAAiBF,UAAU,CAACL,QAAQ,CAACvB,WAAW,IAAI4B,UAAU,CAACL,QAAQ,CAACrB,YAAY,EAAE,CAAC;EACnG2B,OAAO,CAACC,GAAG,CAAC,mBAAmBF,UAAU,CAACL,QAAQ,CAACpB,gBAAgB,EAAE,CAAC;EACtE0B,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAChCD,OAAO,CAACC,GAAG,CAAC,kBAAkBF,UAAU,CAACJ,QAAQ,CAACX,GAAG,EAAE,CAAC;EACxDgB,OAAO,CAACC,GAAG,CAAC,kBAAkBF,UAAU,CAACJ,QAAQ,CAACV,MAAM,EAAE,CAAC;EAC3De,OAAO,CAACC,GAAG,CAAC,mBAAmBF,UAAU,CAACJ,QAAQ,CAACT,IAAI,EAAE,CAAC;EAC1Dc,OAAO,CAACC,GAAG,CAAC,iBAAiBF,UAAU,CAACJ,QAAQ,CAACR,KAAK,EAAE,CAAC;EAEzD,IAAIY,UAAU,CAACP,QAAQ,EAAE;IACvBQ,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC1DD,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;IACrED,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;IAClED,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;EAC3D;EAEA,OAAOF,UAAU;AACnB,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMG,yBAAyB,GAAGA,CAAA,KAAM;EAC7C,MAAMH,UAAU,GAAGR,aAAa,CAAC,CAAC;EAElC,IAAIQ,UAAU,CAACP,QAAQ,EAAE;IACvB;IACAd,QAAQ,CAACC,eAAe,CAACwB,KAAK,CAACC,WAAW,CAAC,eAAe,EAAEL,UAAU,CAACN,UAAU,CAAC;IAClFf,QAAQ,CAACC,eAAe,CAACwB,KAAK,CAACC,WAAW,CAAC,aAAa,EAAEL,UAAU,CAACpC,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC;IAC1Fe,QAAQ,CAACC,eAAe,CAACwB,KAAK,CAACC,WAAW,CAAC,mBAAmB,EAAEL,UAAU,CAACjC,oBAAoB,GAAG,GAAG,GAAG,GAAG,CAAC;;IAE5G;IACA,IAAIiC,UAAU,CAACN,UAAU,CAACY,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC5C3B,QAAQ,CAACC,eAAe,CAACwB,KAAK,CAACC,WAAW,CAAC,kBAAkB,EAAE,2GAA2G,CAAC;IAC7K,CAAC,MAAM,IAAIL,UAAU,CAACN,UAAU,CAACY,QAAQ,CAAC,SAAS,CAAC,EAAE;MACpD3B,QAAQ,CAACC,eAAe,CAACwB,KAAK,CAACC,WAAW,CAAC,kBAAkB,EAAE,KAAK,CAAC;IACvE;IAEAJ,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;EACxE;AACF,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMK,mBAAmB,GAAGA,CAAA,KAAM;EACvC;EACA,IAAI5B,QAAQ,CAAC6B,UAAU,KAAK,SAAS,EAAE;IACrC7B,QAAQ,CAAC8B,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;MAClDC,UAAU,CAAC,MAAM;QACfX,eAAe,CAAC,CAAC;QACjBI,yBAAyB,CAAC,CAAC;MAC7B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACLO,UAAU,CAAC,MAAM;MACfX,eAAe,CAAC,CAAC;MACjBI,yBAAyB,CAAC,CAAC;IAC7B,CAAC,EAAE,IAAI,CAAC;EACV;;EAEA;EACAzC,MAAM,CAAC+C,gBAAgB,CAAC,mBAAmB,EAAE,MAAM;IACjDC,UAAU,CAAC,MAAM;MACfT,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;MACtEC,yBAAyB,CAAC,CAAC;IAC7B,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,CAAC;;EAEF;EACAzC,MAAM,CAAC+C,gBAAgB,CAAC,QAAQ,EAAE,MAAM;IACtCC,UAAU,CAAC,MAAM;MACfP,yBAAyB,CAAC,CAAC;IAC7B,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}