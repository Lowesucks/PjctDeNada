{"ast":null,"code":"/**\r\n * Pull to Refresh - Recarga la p치gina al deslizar hacia abajo desde el tope\r\n */\n\nlet startY = 0;\nlet currentY = 0;\nlet isPulling = false;\nlet pullThreshold = 80; // P칤xeles que debe deslizar para activar\n\n/**\r\n * Inicializar pull to refresh\r\n */\nexport const initPullToRefresh = () => {\n  // Solo en m칩viles\n  if (window.innerWidth > 768) return;\n  const sheetContent = document.querySelector('.sheet-content');\n  const resultsList = document.querySelector('.results-list-mobile');\n  if (!sheetContent && !resultsList) return;\n  const targetElement = sheetContent || resultsList;\n\n  // Detectar inicio del toque\n  targetElement.addEventListener('touchstart', handleTouchStart, {\n    passive: true\n  });\n\n  // Detectar movimiento del toque\n  targetElement.addEventListener('touchmove', handleTouchMove, {\n    passive: false\n  });\n\n  // Detectar fin del toque\n  targetElement.addEventListener('touchend', handleTouchEnd, {\n    passive: true\n  });\n  console.log('游댃 Pull to refresh inicializado');\n};\n\n/**\r\n * Manejar inicio del toque\r\n */\nconst handleTouchStart = e => {\n  startY = e.touches[0].clientY;\n  isPulling = false;\n};\n\n/**\r\n * Manejar movimiento del toque\r\n */\nconst handleTouchMove = e => {\n  if (!startY) return;\n  currentY = e.touches[0].clientY;\n  const deltaY = currentY - startY;\n\n  // Solo activar si est치 en el tope y deslizando hacia abajo\n  const isAtTop = e.target.scrollTop === 0;\n  const isPullingDown = deltaY > 0;\n  if (isAtTop && isPullingDown && deltaY > pullThreshold) {\n    isPulling = true;\n    e.preventDefault(); // Prevenir scroll normal\n  }\n};\n\n/**\r\n * Manejar fin del toque\r\n */\nconst handleTouchEnd = e => {\n  if (isPulling) {\n    console.log('游댃 Pull to refresh activado - Recargando p치gina...');\n\n    // Mostrar feedback visual breve\n    showRefreshFeedback();\n\n    // Recargar la p치gina despu칠s de un peque침o delay\n    setTimeout(() => {\n      window.location.reload();\n    }, 300);\n  }\n\n  // Resetear variables\n  startY = 0;\n  currentY = 0;\n  isPulling = false;\n};\n\n/**\r\n * Mostrar feedback visual de recarga\r\n */\nconst showRefreshFeedback = () => {\n  // Crear indicador de recarga\n  const refreshIndicator = document.createElement('div');\n  refreshIndicator.id = 'refresh-indicator';\n  refreshIndicator.innerHTML = `\n    <div style=\"\n      position: fixed;\n      top: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: rgba(0, 0, 0, 0.8);\n      color: white;\n      padding: 12px 20px;\n      border-radius: 20px;\n      font-size: 14px;\n      font-weight: 500;\n      z-index: 10000;\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    \">\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\" style=\"animation: spin 1s linear infinite;\">\n        <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"/>\n      </svg>\n      Recargando...\n    </div>\n    <style>\n      @keyframes spin {\n        from { transform: rotate(0deg); }\n        to { transform: rotate(360deg); }\n      }\n    </style>\n  `;\n  document.body.appendChild(refreshIndicator);\n\n  // Remover despu칠s de 2 segundos\n  setTimeout(() => {\n    const indicator = document.getElementById('refresh-indicator');\n    if (indicator) {\n      indicator.remove();\n    }\n  }, 2000);\n};\n\n/**\r\n * Detectar si es Safari o Chrome m칩vil\r\n */\nexport const isMobileSafariOrChrome = () => {\n  const userAgent = navigator.userAgent;\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);\n  const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n  const isChrome = /Chrome/.test(userAgent) && !/Edge/.test(userAgent);\n  return isMobile && (isSafari || isChrome);\n};\n\n/**\r\n * Aplicar pull to refresh solo en Safari y Chrome m칩vil\r\n */\nexport const applyPullToRefresh = () => {\n  if (isMobileSafariOrChrome()) {\n    initPullToRefresh();\n  }\n};\n\n/**\r\n * Verificar si pull to refresh est치 activo\r\n */\nexport const isPullToRefreshActive = () => {\n  return isPulling;\n};","map":{"version":3,"names":["startY","currentY","isPulling","pullThreshold","initPullToRefresh","window","innerWidth","sheetContent","document","querySelector","resultsList","targetElement","addEventListener","handleTouchStart","passive","handleTouchMove","handleTouchEnd","console","log","e","touches","clientY","deltaY","isAtTop","target","scrollTop","isPullingDown","preventDefault","showRefreshFeedback","setTimeout","location","reload","refreshIndicator","createElement","id","innerHTML","body","appendChild","indicator","getElementById","remove","isMobileSafariOrChrome","userAgent","navigator","isMobile","test","isSafari","isChrome","applyPullToRefresh","isPullToRefreshActive"],"sources":["C:/Users/anzip/OneDrive/Documentos/Pjarvis/Code/frontend/src/utils/pullToRefresh.js"],"sourcesContent":["/**\r\n * Pull to Refresh - Recarga la p치gina al deslizar hacia abajo desde el tope\r\n */\r\n\r\nlet startY = 0;\r\nlet currentY = 0;\r\nlet isPulling = false;\r\nlet pullThreshold = 80; // P칤xeles que debe deslizar para activar\r\n\r\n/**\r\n * Inicializar pull to refresh\r\n */\r\nexport const initPullToRefresh = () => {\r\n  // Solo en m칩viles\r\n  if (window.innerWidth > 768) return;\r\n  \r\n  const sheetContent = document.querySelector('.sheet-content');\r\n  const resultsList = document.querySelector('.results-list-mobile');\r\n  \r\n  if (!sheetContent && !resultsList) return;\r\n  \r\n  const targetElement = sheetContent || resultsList;\r\n  \r\n  // Detectar inicio del toque\r\n  targetElement.addEventListener('touchstart', handleTouchStart, { passive: true });\r\n  \r\n  // Detectar movimiento del toque\r\n  targetElement.addEventListener('touchmove', handleTouchMove, { passive: false });\r\n  \r\n  // Detectar fin del toque\r\n  targetElement.addEventListener('touchend', handleTouchEnd, { passive: true });\r\n  \r\n  console.log('游댃 Pull to refresh inicializado');\r\n};\r\n\r\n/**\r\n * Manejar inicio del toque\r\n */\r\nconst handleTouchStart = (e) => {\r\n  startY = e.touches[0].clientY;\r\n  isPulling = false;\r\n};\r\n\r\n/**\r\n * Manejar movimiento del toque\r\n */\r\nconst handleTouchMove = (e) => {\r\n  if (!startY) return;\r\n  \r\n  currentY = e.touches[0].clientY;\r\n  const deltaY = currentY - startY;\r\n  \r\n  // Solo activar si est치 en el tope y deslizando hacia abajo\r\n  const isAtTop = e.target.scrollTop === 0;\r\n  const isPullingDown = deltaY > 0;\r\n  \r\n  if (isAtTop && isPullingDown && deltaY > pullThreshold) {\r\n    isPulling = true;\r\n    e.preventDefault(); // Prevenir scroll normal\r\n  }\r\n};\r\n\r\n/**\r\n * Manejar fin del toque\r\n */\r\nconst handleTouchEnd = (e) => {\r\n  if (isPulling) {\r\n    console.log('游댃 Pull to refresh activado - Recargando p치gina...');\r\n    \r\n    // Mostrar feedback visual breve\r\n    showRefreshFeedback();\r\n    \r\n    // Recargar la p치gina despu칠s de un peque침o delay\r\n    setTimeout(() => {\r\n      window.location.reload();\r\n    }, 300);\r\n  }\r\n  \r\n  // Resetear variables\r\n  startY = 0;\r\n  currentY = 0;\r\n  isPulling = false;\r\n};\r\n\r\n/**\r\n * Mostrar feedback visual de recarga\r\n */\r\nconst showRefreshFeedback = () => {\r\n  // Crear indicador de recarga\r\n  const refreshIndicator = document.createElement('div');\r\n  refreshIndicator.id = 'refresh-indicator';\r\n  refreshIndicator.innerHTML = `\r\n    <div style=\"\r\n      position: fixed;\r\n      top: 20px;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n      background: rgba(0, 0, 0, 0.8);\r\n      color: white;\r\n      padding: 12px 20px;\r\n      border-radius: 20px;\r\n      font-size: 14px;\r\n      font-weight: 500;\r\n      z-index: 10000;\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    \">\r\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\" style=\"animation: spin 1s linear infinite;\">\r\n        <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"/>\r\n      </svg>\r\n      Recargando...\r\n    </div>\r\n    <style>\r\n      @keyframes spin {\r\n        from { transform: rotate(0deg); }\r\n        to { transform: rotate(360deg); }\r\n      }\r\n    </style>\r\n  `;\r\n  \r\n  document.body.appendChild(refreshIndicator);\r\n  \r\n  // Remover despu칠s de 2 segundos\r\n  setTimeout(() => {\r\n    const indicator = document.getElementById('refresh-indicator');\r\n    if (indicator) {\r\n      indicator.remove();\r\n    }\r\n  }, 2000);\r\n};\r\n\r\n/**\r\n * Detectar si es Safari o Chrome m칩vil\r\n */\r\nexport const isMobileSafariOrChrome = () => {\r\n  const userAgent = navigator.userAgent;\r\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);\r\n  const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\r\n  const isChrome = /Chrome/.test(userAgent) && !/Edge/.test(userAgent);\r\n  \r\n  return isMobile && (isSafari || isChrome);\r\n};\r\n\r\n/**\r\n * Aplicar pull to refresh solo en Safari y Chrome m칩vil\r\n */\r\nexport const applyPullToRefresh = () => {\r\n  if (isMobileSafariOrChrome()) {\r\n    initPullToRefresh();\r\n  }\r\n};\r\n\r\n/**\r\n * Verificar si pull to refresh est치 activo\r\n */\r\nexport const isPullToRefreshActive = () => {\r\n  return isPulling;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}